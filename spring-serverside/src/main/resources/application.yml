spring:
  profiles:
    active: dev

apiBaseAntMatcher: /api/*
allowCredentials: false
headers: Access-Control-Allow-Origin,Access-Control-Allow-Credentials,X-Requested-With,Origin,Content-Type,Accept,Authorization,WWW-Authenticate
methods: GET,POST,PATCH,PUT,DELETE

# docker profile
---
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    schema: sample_data

  jpa:
    properties:
      hibernate:
        default_schema: sample_data

logging:
  level:
    com.example.aggridserversidespringbootexample: debug
    org.springframework: info

originUrl: ${ORIGIN_URL:http://localhost:3000}

# dev profile
---
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:mysql://0.0.0.0:23306/employees
    username: root
    password: root

  jpa:
    show-sql: true
    properties:
      hibernate:
        default_schema: employees

logging:
  level:
    com.example.aggridserversidespringbootexample: debug
    org.springframework: info
#    org.springframework.jdbc: debug
#    org.hibernate: debug

originUrl: ${ORIGIN_URL:http://localhost:3000}
